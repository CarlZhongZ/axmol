-- auto generated by tools
## enumTypes
-- enum types
#for enumType in $enumTypes
    #set enumInfo = $parsedEnums[enumType]
---@alias ${enumInfo.luaClassName} number

---@class ${enumInfo.luaClassName}Table
    #for m in enumInfo.fields
---@field ${m[0]} number
    #end for
#end for



## structTypes
#for structType in $structTypes
    #set structInfo = $parsedStructs[structType]
-- struct:${structInfo.ns_full_name}
---@class ${structInfo.luaClassName}
        #for m in structInfo.fields
${m.luaFieldDesc} @ field
        #end for
#end for



## classTypes
#for classType in $classTypes
    #set classInfo = $parsedClasses[classType]



-- class:${classInfo.ns_full_name}
    #set parentDescS = ''
    #set parentDesc = ''
    #if classInfo.parents
        #set parentDescS = ': ' + classInfo.parents[0].luaClassName + 'S'
        #set parentDesc = ': ' + classInfo.parents[0].luaClassName
    #end if
---@class ${classInfo.luaClassName}S${parentDescS}
    #for _, m in classInfo.validConstructors.items()
${m.luaFieldDesc} @ static method
    #end for
    #for m in classInfo.validStaticMethods
${m.luaFieldDesc} @ static method
    #end for

---@class ${classInfo.luaClassName}${parentDesc}
    #for m in classInfo.validFields
${m.luaFieldDesc} @ field
    #end for
    #for m in classInfo.validMethods
${m.luaFieldDesc} @ method
    #end for
#end for
